{
  "dataType": "CVE_RECORD",
  "dataVersion": "5.1",
  "cveMetadata": {
    "cveId": "CVE-2021-47465",
    "assignerOrgId": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
    "state": "PUBLISHED",
    "assignerShortName": "Linux",
    "dateReserved": "2024-05-22T06:20:56.198Z",
    "datePublished": "2024-05-22T06:23:25.027Z",
    "dateUpdated": "2024-06-04T17:14:10.403Z"
  },
  "containers": {
    "cna": {
      "providerMetadata": {
        "orgId": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "shortName": "Linux",
        "dateUpdated": "2024-05-29T05:08:24.817Z"
      },
      "descriptions": [
        {
          "lang": "en",
          "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: PPC: Book3S HV: Fix stack handling in idle_kvm_start_guest()\n\nIn commit 10d91611f426 (\"powerpc/64s: Reimplement book3s idle code in\nC\") kvm_start_guest() became idle_kvm_start_guest(). The old code\nallocated a stack frame on the emergency stack, but didn't use the\nframe to store anything, and also didn't store anything in its caller's\nframe.\n\nidle_kvm_start_guest() on the other hand is written more like a normal C\nfunction, it creates a frame on entry, and also stores CR/LR into its\ncallers frame (per the ABI). The problem is that there is no caller\nframe on the emergency stack.\n\nThe emergency stack for a given CPU is allocated with:\n\n  paca_ptrs[i]->emergency_sp = alloc_stack(limit, i) + THREAD_SIZE;\n\nSo emergency_sp actually points to the first address above the emergency\nstack allocation for a given CPU, we must not store above it without\nfirst decrementing it to create a frame. This is different to the\nregular kernel stack, paca->kstack, which is initialised to point at an\ninitial frame that is ready to use.\n\nidle_kvm_start_guest() stores the backchain, CR and LR all of which\nwrite outside the allocation for the emergency stack. It then creates a\nstack frame and saves the non-volatile registers. Unfortunately the\nframe it creates is not large enough to fit the non-volatiles, and so\nthe saving of the non-volatile registers also writes outside the\nemergency stack allocation.\n\nThe end result is that we corrupt whatever is at 0-24 bytes, and 112-248\nbytes above the emergency stack allocation.\n\nIn practice this has gone unnoticed because the memory immediately above\nthe emergency stack happens to be used for other stack allocations,\neither another CPUs mc_emergency_sp or an IRQ stack. See the order of\ncalls to irqstack_early_init() and emergency_stack_init().\n\nThe low addresses of another stack are the top of that stack, and so are\nonly used if that stack is under extreme pressue, which essentially\nnever happens in practice - and if it did there's a high likelyhood we'd\ncrash due to that stack overflowing.\n\nStill, we shouldn't be corrupting someone else's stack, and it is purely\nluck that we aren't corrupting something else.\n\nTo fix it we save CR/LR into the caller's frame using the existing r1 on\nentry, we then create a SWITCH_FRAME_SIZE frame (which has space for\npt_regs) on the emergency stack with the backchain pointing to the\nexisting stack, and then finally we switch to the new frame on the\nemergency stack."
        }
      ],
      "affected": [
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "unaffected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "arch/powerpc/kvm/book3s_hv_rmhandlers.S"
          ],
          "versions": [
            {
              "version": "10d91611f426",
              "lessThan": "80bbb0bc3a02",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "10d91611f426",
              "lessThan": "fbd724c49bea",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "10d91611f426",
              "lessThan": "6d077c37c464",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "10d91611f426",
              "lessThan": "9b4416c5095c",
              "status": "affected",
              "versionType": "git"
            }
          ]
        },
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "affected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "arch/powerpc/kvm/book3s_hv_rmhandlers.S"
          ],
          "versions": [
            {
              "version": "5.2",
              "status": "affected"
            },
            {
              "version": "0",
              "lessThan": "5.2",
              "status": "unaffected",
              "versionType": "custom"
            },
            {
              "version": "5.4.156",
              "lessThanOrEqual": "5.4.*",
              "status": "unaffected",
              "versionType": "custom"
            },
            {
              "version": "5.10.76",
              "lessThanOrEqual": "5.10.*",
              "status": "unaffected",
              "versionType": "custom"
            },
            {
              "version": "5.14.15",
              "lessThanOrEqual": "5.14.*",
              "status": "unaffected",
              "versionType": "custom"
            },
            {
              "version": "5.15",
              "lessThanOrEqual": "*",
              "status": "unaffected",
              "versionType": "original_commit_for_fix"
            }
          ]
        }
      ],
      "references": [
        {
          "url": "https://git.kernel.org/stable/c/80bbb0bc3a0288442f7fe6fc514f4ee1cb06ccb7"
        },
        {
          "url": "https://git.kernel.org/stable/c/fbd724c49bead048ae9fc1a5b7bff2fb3e54f855"
        },
        {
          "url": "https://git.kernel.org/stable/c/6d077c37c4643394b1bae9682da48164fc147ea8"
        },
        {
          "url": "https://git.kernel.org/stable/c/9b4416c5095c20e110c82ae602c254099b83b72f"
        }
      ],
      "title": "KVM: PPC: Book3S HV: Fix stack handling in idle_kvm_start_guest()",
      "x_generator": {
        "engine": "bippy-a5840b7849dd"
      }
    },
    "adp": [
      {
        "metrics": [
          {
            "other": {
              "type": "ssvc",
              "content": {
                "id": "CVE-2021-47465",
                "role": "CISA Coordinator",
                "options": [
                  {
                    "Exploitation": "none"
                  },
                  {
                    "Automatable": "no"
                  },
                  {
                    "Technical Impact": "partial"
                  }
                ],
                "version": "2.0.3",
                "timestamp": "2024-05-29T18:41:27.701748Z"
              }
            }
          }
        ],
        "providerMetadata": {
          "orgId": "134c704f-9b21-4f2e-91b3-4a467353bcc0",
          "shortName": "CISA-ADP",
          "dateUpdated": "2024-05-29T18:41:32.459Z"
        },
        "title": "CISA ADP Vulnrichment"
      }
    ]
  }
}