{
  "dataType": "CVE_RECORD",
  "containers": {
    "cna": {
      "title": "RDMA/siw: Fix a use after free in siw_alloc_mr",
      "affected": [
        {
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "vendor": "Linux",
          "product": "Linux",
          "versions": [
            {
              "status": "affected",
              "version": "2251334dcac9",
              "lessThan": "30b9e92d0b5e",
              "versionType": "git"
            },
            {
              "status": "affected",
              "version": "2251334dcac9",
              "lessThan": "608a4b90ece0",
              "versionType": "git"
            },
            {
              "status": "affected",
              "version": "2251334dcac9",
              "lessThan": "3e22b88e02c1",
              "versionType": "git"
            },
            {
              "status": "affected",
              "version": "2251334dcac9",
              "lessThan": "ad9ce7188432",
              "versionType": "git"
            },
            {
              "status": "affected",
              "version": "2251334dcac9",
              "lessThan": "3093ee182f01",
              "versionType": "git"
            }
          ],
          "programFiles": [
            "drivers/infiniband/sw/siw/siw_mem.c"
          ],
          "defaultStatus": "unaffected"
        },
        {
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "vendor": "Linux",
          "product": "Linux",
          "versions": [
            {
              "status": "affected",
              "version": "5.3"
            },
            {
              "status": "unaffected",
              "version": "0",
              "lessThan": "5.3",
              "versionType": "custom"
            },
            {
              "status": "unaffected",
              "version": "5.4.119",
              "versionType": "custom",
              "lessThanOrEqual": "5.4.*"
            },
            {
              "status": "unaffected",
              "version": "5.10.37",
              "versionType": "custom",
              "lessThanOrEqual": "5.10.*"
            },
            {
              "status": "unaffected",
              "version": "5.11.21",
              "versionType": "custom",
              "lessThanOrEqual": "5.11.*"
            },
            {
              "status": "unaffected",
              "version": "5.12.4",
              "versionType": "custom",
              "lessThanOrEqual": "5.12.*"
            },
            {
              "status": "unaffected",
              "version": "5.13",
              "versionType": "original_commit_for_fix",
              "lessThanOrEqual": "*"
            }
          ],
          "programFiles": [
            "drivers/infiniband/sw/siw/siw_mem.c"
          ],
          "defaultStatus": "affected"
        }
      ],
      "references": [
        {
          "url": "https://git.kernel.org/stable/c/30b9e92d0b5e5d5dc1101ab856c17009537cbca4"
        },
        {
          "url": "https://git.kernel.org/stable/c/608a4b90ece039940e9425ee2b39c8beff27e00c"
        },
        {
          "url": "https://git.kernel.org/stable/c/3e22b88e02c194f6c80867abfef5cc09383461f4"
        },
        {
          "url": "https://git.kernel.org/stable/c/ad9ce7188432650469a6c7625bf479f5ed0b6155"
        },
        {
          "url": "https://git.kernel.org/stable/c/3093ee182f01689b89e9f8797b321603e5de4f63"
        }
      ],
      "x_generator": {
        "engine": "bippy-a5840b7849dd"
      },
      "descriptions": [
        {
          "lang": "en",
          "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/siw: Fix a use after free in siw_alloc_mr\n\nOur code analyzer reported a UAF.\n\nIn siw_alloc_mr(), it calls siw_mr_add_mem(mr,..). In the implementation of\nsiw_mr_add_mem(), mem is assigned to mr->mem and then mem is freed via\nkfree(mem) if xa_alloc_cyclic() failed. Here, mr->mem still point to a\nfreed object. After, the execution continue up to the err_out branch of\nsiw_alloc_mr, and the freed mr->mem is used in siw_mr_drop_mem(mr).\n\nMy patch moves \"mr->mem = mem\" behind the if (xa_alloc_cyclic(..)<0) {}\nsection, to avoid the uaf."
        }
      ],
      "providerMetadata": {
        "orgId": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "shortName": "Linux",
        "dateUpdated": "2024-05-29T05:00:30.860Z"
      }
    },
    "adp": [
      {
        "metrics": [
          {
            "other": {
              "type": "ssvc",
              "content": {
                "id": "CVE-2021-47012",
                "role": "CISA Coordinator",
                "options": [
                  {
                    "Exploitation": "none"
                  },
                  {
                    "Automatable": "no"
                  },
                  {
                    "Technical Impact": "partial"
                  }
                ],
                "version": "2.0.3",
                "timestamp": "2024-02-28T20:34:17.324799Z"
              }
            }
          }
        ],
        "providerMetadata": {
          "shortName": "CISA-ADP",
          "orgId": "134c704f-9b21-4f2e-91b3-4a467353bcc0",
          "dateUpdated": "2024-05-23T19:01:13.831Z"
        }
      }
    ]
  },
  "cveMetadata": {
    "cveId": "CVE-2021-47012",
    "state": "PUBLISHED",
    "dateUpdated": "2024-05-29T05:00:30.860Z",
    "dateReserved": "2024-02-27T18:42:55.953Z",
    "assignerOrgId": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
    "datePublished": "2024-02-28T08:13:30.284Z",
    "assignerShortName": "Linux"
  },
  "dataVersion": "5.1"
}