{
  "dataType": "CVE_RECORD",
  "containers": {
    "adp": [
      {
        "title": "CISA ADP Vulnrichment",
        "metrics": [
          {
            "other": {
              "type": "ssvc",
              "content": {
                "id": "CVE-2022-48727",
                "role": "CISA Coordinator",
                "options": [
                  {
                    "Exploitation": "none"
                  },
                  {
                    "Automatable": "no"
                  },
                  {
                    "Technical Impact": "partial"
                  }
                ],
                "version": "2.0.3",
                "timestamp": "2024-06-20T16:20:44.710184Z"
              }
            }
          }
        ],
        "providerMetadata": {
          "orgId": "134c704f-9b21-4f2e-91b3-4a467353bcc0",
          "shortName": "CISA-ADP",
          "dateUpdated": "2024-06-20T16:20:50.325Z"
        }
      }
    ],
    "cna": {
      "title": "KVM: arm64: Avoid consuming a stale esr value when SError occur",
      "affected": [
        {
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "vendor": "Linux",
          "product": "Linux",
          "versions": [
            {
              "status": "affected",
              "version": "defe21f49bc9",
              "lessThan": "e1e852746997",
              "versionType": "git"
            },
            {
              "status": "affected",
              "version": "defe21f49bc9",
              "lessThan": "57e2986c3b25",
              "versionType": "git"
            },
            {
              "status": "affected",
              "version": "defe21f49bc9",
              "lessThan": "1c71dbc8a179",
              "versionType": "git"
            }
          ],
          "programFiles": [
            "arch/arm64/kvm/hyp/include/hyp/switch.h"
          ],
          "defaultStatus": "unaffected"
        },
        {
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "vendor": "Linux",
          "product": "Linux",
          "versions": [
            {
              "status": "affected",
              "version": "5.11"
            },
            {
              "status": "unaffected",
              "version": "0",
              "lessThan": "5.11",
              "versionType": "custom"
            },
            {
              "status": "unaffected",
              "version": "5.15.22",
              "versionType": "custom",
              "lessThanOrEqual": "5.15.*"
            },
            {
              "status": "unaffected",
              "version": "5.16.8",
              "versionType": "custom",
              "lessThanOrEqual": "5.16.*"
            },
            {
              "status": "unaffected",
              "version": "5.17",
              "versionType": "original_commit_for_fix",
              "lessThanOrEqual": "*"
            }
          ],
          "programFiles": [
            "arch/arm64/kvm/hyp/include/hyp/switch.h"
          ],
          "defaultStatus": "affected"
        }
      ],
      "references": [
        {
          "url": "https://git.kernel.org/stable/c/e1e852746997500f1873f60b954da5f02cc2dba3"
        },
        {
          "url": "https://git.kernel.org/stable/c/57e2986c3b25092691a6e3d6ee9168caf8978932"
        },
        {
          "url": "https://git.kernel.org/stable/c/1c71dbc8a179d99dd9bb7e7fc1888db613cf85de"
        }
      ],
      "x_generator": {
        "engine": "bippy-7d53e8ef8be4"
      },
      "descriptions": [
        {
          "lang": "en",
          "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: arm64: Avoid consuming a stale esr value when SError occur\n\nWhen any exception other than an IRQ occurs, the CPU updates the ESR_EL2\nregister with the exception syndrome. An SError may also become pending,\nand will be synchronised by KVM. KVM notes the exception type, and whether\nan SError was synchronised in exit_code.\n\nWhen an exception other than an IRQ occurs, fixup_guest_exit() updates\nvcpu->arch.fault.esr_el2 from the hardware register. When an SError was\nsynchronised, the vcpu esr value is used to determine if the exception\nwas due to an HVC. If so, ELR_EL2 is moved back one instruction. This\nis so that KVM can process the SError first, and re-execute the HVC if\nthe guest survives the SError.\n\nBut if an IRQ synchronises an SError, the vcpu's esr value is stale.\nIf the previous non-IRQ exception was an HVC, KVM will corrupt ELR_EL2,\ncausing an unrelated guest instruction to be executed twice.\n\nCheck ARM_EXCEPTION_CODE() before messing with ELR_EL2, IRQs don't\nupdate this register so don't need to check."
        }
      ],
      "providerMetadata": {
        "orgId": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "shortName": "Linux",
        "dateUpdated": "2024-06-20T11:14:16.037Z"
      }
    }
  },
  "cveMetadata": {
    "cveId": "CVE-2022-48727",
    "state": "PUBLISHED",
    "dateUpdated": "2024-06-20T16:20:53.835Z",
    "dateReserved": "2024-06-20T11:09:39.052Z",
    "assignerOrgId": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
    "datePublished": "2024-06-20T11:13:16.668Z",
    "assignerShortName": "Linux"
  },
  "dataVersion": "5.1"
}